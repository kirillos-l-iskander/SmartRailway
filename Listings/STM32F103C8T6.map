Component: ARM Compiler 6.14.1 Tool: armlink [5db06d00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to sch.o(.text.SCH_Init) for SCH_Init
    main.o(.text.main) refers to afio.o(.text.Disable_JTAG) for Disable_JTAG
    main.o(.text.main) refers to sch_config.o(.text.SW_Delay_us) for SW_Delay_us
    main.o(.text.main) refers to sch.o(.text.SCH_Start) for SCH_Start
    main.o(.text.main) refers to sch.o(.text.SCH_Dispatch_Tasks) for SCH_Dispatch_Tasks
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SR_Task) refers to led.o(.text.LED_Init) for LED_Init
    main.o(.text.SR_Task) refers to nrf24l01+.o(.text.NRF_InitSR) for NRF_InitSR
    main.o(.text.SR_Task) refers to led.o(.text.LED_Update) for LED_Update
    main.o(.text.SR_Task) refers to sch.o(.text.SCH_Add_Task) for SCH_Add_Task
    main.o(.text.SR_Task) refers to sr.o(.text.SR_Update) for SR_Update
    main.o(.ARM.exidx.text.SR_Task) refers to main.o(.text.SR_Task) for [Anonymous Symbol]
    main.o(.text.ST1_Task) refers to led.o(.text.LED_Init) for LED_Init
    main.o(.text.ST1_Task) refers to ir.o(.text.IR_Init) for IR_Init
    main.o(.text.ST1_Task) refers to lcd.o(.text.LCD_Init) for LCD_Init
    main.o(.text.ST1_Task) refers to nrf24l01+.o(.text.NRF_InitST1) for NRF_InitST1
    main.o(.text.ST1_Task) refers to led.o(.text.LED_Update) for LED_Update
    main.o(.text.ST1_Task) refers to sch.o(.text.SCH_Add_Task) for SCH_Add_Task
    main.o(.text.ST1_Task) refers to ir.o(.text.IR_Update) for IR_Update
    main.o(.text.ST1_Task) refers to st.o(.text.ST_Update) for ST_Update
    main.o(.text.ST1_Task) refers to lcd.o(.text.LCD_Update) for LCD_Update
    main.o(.text.ST1_Task) refers to nrf24l01+.o(.text.NRF_Update) for NRF_Update
    main.o(.ARM.exidx.text.ST1_Task) refers to main.o(.text.ST1_Task) for [Anonymous Symbol]
    main.o(.text.ST2_Task) refers to led.o(.text.LED_Init) for LED_Init
    main.o(.text.ST2_Task) refers to ir.o(.text.IR_Init) for IR_Init
    main.o(.text.ST2_Task) refers to lcd.o(.text.LCD_Init) for LCD_Init
    main.o(.text.ST2_Task) refers to nrf24l01+.o(.text.NRF_InitST2) for NRF_InitST2
    main.o(.text.ST2_Task) refers to led.o(.text.LED_Update) for LED_Update
    main.o(.text.ST2_Task) refers to sch.o(.text.SCH_Add_Task) for SCH_Add_Task
    main.o(.text.ST2_Task) refers to ir.o(.text.IR_Update) for IR_Update
    main.o(.text.ST2_Task) refers to st.o(.text.ST_Update) for ST_Update
    main.o(.text.ST2_Task) refers to lcd.o(.text.LCD_Update) for LCD_Update
    main.o(.text.ST2_Task) refers to nrf24l01+.o(.text.NRF_Update) for NRF_Update
    main.o(.ARM.exidx.text.ST2_Task) refers to main.o(.text.ST2_Task) for [Anonymous Symbol]
    main.o(.text.TR1_Task) refers to led.o(.text.LED_Init) for LED_Init
    main.o(.text.TR1_Task) refers to pid.o(.text.PID_Init) for PID_Init
    main.o(.text.TR1_Task) refers to tim.o(.text.TIM2_Init) for TIM2_Init
    main.o(.text.TR1_Task) refers to tim.o(.text.TIM3_Init) for TIM3_Init
    main.o(.text.TR1_Task) refers to nrf24l01+.o(.text.NRF_InitTR1) for NRF_InitTR1
    main.o(.text.TR1_Task) refers to led.o(.text.LED_Update) for LED_Update
    main.o(.text.TR1_Task) refers to sch.o(.text.SCH_Add_Task) for SCH_Add_Task
    main.o(.text.TR1_Task) refers to nrf24l01+.o(.text.NRF_Update) for NRF_Update
    main.o(.text.TR1_Task) refers to tr.o(.text.TR_Update) for TR_Update
    main.o(.ARM.exidx.text.TR1_Task) refers to main.o(.text.TR1_Task) for [Anonymous Symbol]
    main.o(.text.TR2_Task) refers to led.o(.text.LED_Init) for LED_Init
    main.o(.text.TR2_Task) refers to pid.o(.text.PID_Init) for PID_Init
    main.o(.text.TR2_Task) refers to tim.o(.text.TIM2_Init) for TIM2_Init
    main.o(.text.TR2_Task) refers to tim.o(.text.TIM3_Init) for TIM3_Init
    main.o(.text.TR2_Task) refers to nrf24l01+.o(.text.NRF_InitTR2) for NRF_InitTR2
    main.o(.text.TR2_Task) refers to led.o(.text.LED_Update) for LED_Update
    main.o(.text.TR2_Task) refers to sch.o(.text.SCH_Add_Task) for SCH_Add_Task
    main.o(.text.TR2_Task) refers to nrf24l01+.o(.text.NRF_Update) for NRF_Update
    main.o(.text.TR2_Task) refers to tr.o(.text.TR_Update) for TR_Update
    main.o(.ARM.exidx.text.TR2_Task) refers to main.o(.text.TR2_Task) for [Anonymous Symbol]
    adc.o(.text.ADC_Init) refers to afio.o(.text.AFIO_Init) for AFIO_Init
    adc.o(.text.ADC_Init) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    adc.o(.text.ADC_Init) refers to sch_config.o(.text.HW_Delay_ms) for HW_Delay_ms
    adc.o(.ARM.exidx.text.ADC_Init) refers to adc.o(.text.ADC_Init) for [Anonymous Symbol]
    adc.o(.text.ADC_Update) refers to adc.o(.bss.ADC_State) for ADC_State
    adc.o(.ARM.exidx.text.ADC_Update) refers to adc.o(.text.ADC_Update) for [Anonymous Symbol]
    adc.o(.text.ADC_GetState) refers to adc.o(.bss.ADC_State) for ADC_State
    adc.o(.ARM.exidx.text.ADC_GetState) refers to adc.o(.text.ADC_GetState) for [Anonymous Symbol]
    lcd.o(.text.LCD_Init) refers to lcd.o(.bss.LCD_ReadingRowIndex_G) for LCD_ReadingRowIndex_G
    lcd.o(.text.LCD_Init) refers to lcd.o(.bss.LCD_ReadingColumnIndex_G) for LCD_ReadingColumnIndex_G
    lcd.o(.text.LCD_Init) refers to lcd.o(.text.LCD_ClearBuffer) for LCD_ClearBuffer
    lcd.o(.text.LCD_Init) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    lcd.o(.text.LCD_Init) refers to lcd.o(.text.LCD_SendCommand) for LCD_SendCommand
    lcd.o(.text.LCD_Init) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    lcd.o(.ARM.exidx.text.LCD_Init) refers to lcd.o(.text.LCD_Init) for [Anonymous Symbol]
    lcd.o(.text.LCD_ClearBuffer) refers to lcd.o(.bss.LCD_Buff_G) for LCD_Buff_G
    lcd.o(.ARM.exidx.text.LCD_ClearBuffer) refers to lcd.o(.text.LCD_ClearBuffer) for [Anonymous Symbol]
    lcd.o(.text.LCD_SendCommand) refers to gpio.o(.text.GPIO_SetPortState) for GPIO_SetPortState
    lcd.o(.text.LCD_SendCommand) refers to gpio.o(.text.GPIO_SetPinState) for GPIO_SetPinState
    lcd.o(.text.LCD_SendCommand) refers to sch_config.o(.text.SW_Delay_us) for SW_Delay_us
    lcd.o(.ARM.exidx.text.LCD_SendCommand) refers to lcd.o(.text.LCD_SendCommand) for [Anonymous Symbol]
    lcd.o(.text.LCD_Clear) refers to lcd.o(.text.LCD_SendCommand) for LCD_SendCommand
    lcd.o(.text.LCD_Clear) refers to sch_config.o(.text.SW_Delay_us) for SW_Delay_us
    lcd.o(.ARM.exidx.text.LCD_Clear) refers to lcd.o(.text.LCD_Clear) for [Anonymous Symbol]
    lcd.o(.text.LCD_Update) refers to lcd.o(.bss.LCD_ReadingRowIndex_G) for LCD_ReadingRowIndex_G
    lcd.o(.text.LCD_Update) refers to lcd.o(.bss.LCD_ReadingColumnIndex_G) for LCD_ReadingColumnIndex_G
    lcd.o(.text.LCD_Update) refers to lcd.o(.bss.LCD_Buff_G) for LCD_Buff_G
    lcd.o(.text.LCD_Update) refers to lcd.o(.text.LCD_SendCharacter) for LCD_SendCharacter
    lcd.o(.ARM.exidx.text.LCD_Update) refers to lcd.o(.text.LCD_Update) for [Anonymous Symbol]
    lcd.o(.text.LCD_SendCharacter) refers to gpio.o(.text.GPIO_SetPortState) for GPIO_SetPortState
    lcd.o(.text.LCD_SendCharacter) refers to gpio.o(.text.GPIO_SetPinState) for GPIO_SetPinState
    lcd.o(.text.LCD_SendCharacter) refers to sch_config.o(.text.SW_Delay_us) for SW_Delay_us
    lcd.o(.ARM.exidx.text.LCD_SendCharacter) refers to lcd.o(.text.LCD_SendCharacter) for [Anonymous Symbol]
    lcd.o(.text.LCD_SendString) refers to lcd.o(.text.LCD_SendCharacter) for LCD_SendCharacter
    lcd.o(.ARM.exidx.text.LCD_SendString) refers to lcd.o(.text.LCD_SendString) for [Anonymous Symbol]
    lcd.o(.text.LCD_SetCursor) refers to lcd.o(.text.LCD_SendCommand) for LCD_SendCommand
    lcd.o(.ARM.exidx.text.LCD_SetCursor) refers to lcd.o(.text.LCD_SetCursor) for [Anonymous Symbol]
    lcd.o(.text.LCD_SetCharacterBuffer) refers to lcd.o(.bss.LCD_Buff_G) for LCD_Buff_G
    lcd.o(.ARM.exidx.text.LCD_SetCharacterBuffer) refers to lcd.o(.text.LCD_SetCharacterBuffer) for [Anonymous Symbol]
    lcd.o(.text.LCD_SetStringBuffer) refers to lcd.o(.bss.LCD_Buff_G) for LCD_Buff_G
    lcd.o(.ARM.exidx.text.LCD_SetStringBuffer) refers to lcd.o(.text.LCD_SetStringBuffer) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_InitPin) refers to gpio.o(.text.GPIO_InitPin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetPinState) refers to gpio.o(.text.GPIO_SetPinState) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_GetPinState) refers to gpio.o(.text.GPIO_GetPinState) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetPortState) refers to gpio.o(.text.GPIO_SetPortState) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_GetPortState) refers to gpio.o(.text.GPIO_GetPortState) for [Anonymous Symbol]
    ir.o(.text.IR_Init) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    ir.o(.ARM.exidx.text.IR_Init) refers to ir.o(.text.IR_Init) for [Anonymous Symbol]
    ir.o(.text.IR_Update) refers to gpio.o(.text.GPIO_GetPinState) for GPIO_GetPinState
    ir.o(.text.IR_Update) refers to ir.o(.bss.IR_State_G) for IR_State_G
    ir.o(.ARM.exidx.text.IR_Update) refers to ir.o(.text.IR_Update) for [Anonymous Symbol]
    ir.o(.text.IR_GetState) refers to ir.o(.bss.IR_State_G) for IR_State_G
    ir.o(.ARM.exidx.text.IR_GetState) refers to ir.o(.text.IR_GetState) for [Anonymous Symbol]
    led.o(.text.LED_Init) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    led.o(.ARM.exidx.text.LED_Init) refers to led.o(.text.LED_Init) for [Anonymous Symbol]
    led.o(.text.LED_Update) refers to led.o(.bss.LED_G) for LED_G
    led.o(.text.LED_Update) refers to gpio.o(.text.GPIO_SetPinState) for GPIO_SetPinState
    led.o(.ARM.exidx.text.LED_Update) refers to led.o(.text.LED_Update) for [Anonymous Symbol]
    led.o(.text.LED_SetState) refers to led.o(.bss.LED_G) for LED_G
    led.o(.ARM.exidx.text.LED_SetState) refers to led.o(.text.LED_SetState) for [Anonymous Symbol]
    spi.o(.text.SPI2_Init) refers to afio.o(.text.AFIO_Init) for AFIO_Init
    spi.o(.text.SPI2_Init) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    spi.o(.ARM.exidx.text.SPI2_Init) refers to spi.o(.text.SPI2_Init) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI2_Transfer) refers to spi.o(.text.SPI2_Transfer) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_CSN) refers to gpio.o(.text.GPIO_SetPinState) for GPIO_SetPinState
    nrf24l01+.o(.ARM.exidx.text.NRF_CSN) refers to nrf24l01+.o(.text.NRF_CSN) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_CE) refers to gpio.o(.text.GPIO_SetPinState) for GPIO_SetPinState
    nrf24l01+.o(.ARM.exidx.text.NRF_CE) refers to nrf24l01+.o(.text.NRF_CE) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_WriteByte) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_WriteByte) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.ARM.exidx.text.NRF_WriteByte) refers to nrf24l01+.o(.text.NRF_WriteByte) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_WritePage) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_WritePage) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.ARM.exidx.text.NRF_WritePage) refers to nrf24l01+.o(.text.NRF_WritePage) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_ReadByte) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_ReadByte) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.ARM.exidx.text.NRF_ReadByte) refers to nrf24l01+.o(.text.NRF_ReadByte) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_ReadPage) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_ReadPage) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.ARM.exidx.text.NRF_ReadPage) refers to nrf24l01+.o(.text.NRF_ReadPage) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_FlushTx) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_FlushTx) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.ARM.exidx.text.NRF_FlushTx) refers to nrf24l01+.o(.text.NRF_FlushTx) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_FlushRx) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_FlushRx) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.ARM.exidx.text.NRF_FlushRx) refers to nrf24l01+.o(.text.NRF_FlushRx) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_StartTxMode) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_StartTxMode) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.ARM.exidx.text.NRF_StartTxMode) refers to nrf24l01+.o(.text.NRF_StartTxMode) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_StartRxMode) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_StartRxMode) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.text.NRF_StartRxMode) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.ARM.exidx.text.NRF_StartRxMode) refers to nrf24l01+.o(.text.NRF_StartRxMode) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_StopRxMode) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.ARM.exidx.text.NRF_StopRxMode) refers to nrf24l01+.o(.text.NRF_StopRxMode) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_CheckTxFlag) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_CheckTxFlag) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.text.NRF_CheckTxFlag) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.text.NRF_CheckTxFlag) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.text.NRF_CheckTxFlag) refers to sch_config.o(.text.SW_Delay_us) for SW_Delay_us
    nrf24l01+.o(.ARM.exidx.text.NRF_CheckTxFlag) refers to nrf24l01+.o(.text.NRF_CheckTxFlag) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_CheckRxFlag) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_CheckRxFlag) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.ARM.exidx.text.NRF_CheckRxFlag) refers to nrf24l01+.o(.text.NRF_CheckRxFlag) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_Transmit) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_Transmit) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.text.NRF_Transmit) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.text.NRF_Transmit) refers to sch_config.o(.text.SW_Delay_us) for SW_Delay_us
    nrf24l01+.o(.ARM.exidx.text.NRF_Transmit) refers to nrf24l01+.o(.text.NRF_Transmit) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_Receive) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_Receive) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.ARM.exidx.text.NRF_Receive) refers to nrf24l01+.o(.text.NRF_Receive) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_ACK) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_ACK) refers to spi.o(.text.SPI2_Transfer) for SPI2_Transfer
    nrf24l01+.o(.ARM.exidx.text.NRF_ACK) refers to nrf24l01+.o(.text.NRF_ACK) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_SetChannel) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.ARM.exidx.text.NRF_SetChannel) refers to nrf24l01+.o(.text.NRF_SetChannel) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_OpenWritingPipe) refers to nrf24l01+.o(.text.NRF_WritePage) for NRF_WritePage
    nrf24l01+.o(.ARM.exidx.text.NRF_OpenWritingPipe) refers to nrf24l01+.o(.text.NRF_OpenWritingPipe) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_OpenReadingPipe1) refers to nrf24l01+.o(.text.NRF_WritePage) for NRF_WritePage
    nrf24l01+.o(.ARM.exidx.text.NRF_OpenReadingPipe1) refers to nrf24l01+.o(.text.NRF_OpenReadingPipe1) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_OpenReadingPipe2) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.ARM.exidx.text.NRF_OpenReadingPipe2) refers to nrf24l01+.o(.text.NRF_OpenReadingPipe2) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_InitSR) refers to spi.o(.text.SPI2_Init) for SPI2_Init
    nrf24l01+.o(.text.NRF_InitSR) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    nrf24l01+.o(.text.NRF_InitSR) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_InitSR) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.text.NRF_InitSR) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.text.NRF_InitSR) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_InitSR) refers to nrf24l01+.o(.data.NRF_Addr_G) for NRF_Addr_G
    nrf24l01+.o(.text.NRF_InitSR) refers to nrf24l01+.o(.text.NRF_WritePage) for NRF_WritePage
    nrf24l01+.o(.text.NRF_InitSR) refers to nrf24l01+.o(.text.NRF_FlushTx) for NRF_FlushTx
    nrf24l01+.o(.text.NRF_InitSR) refers to nrf24l01+.o(.text.NRF_FlushRx) for NRF_FlushRx
    nrf24l01+.o(.ARM.exidx.text.NRF_InitSR) refers to nrf24l01+.o(.text.NRF_InitSR) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_InitST1) refers to spi.o(.text.SPI2_Init) for SPI2_Init
    nrf24l01+.o(.text.NRF_InitST1) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    nrf24l01+.o(.text.NRF_InitST1) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_InitST1) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.text.NRF_InitST1) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.text.NRF_InitST1) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_InitST1) refers to nrf24l01+.o(.data.NRF_Addr_G) for NRF_Addr_G
    nrf24l01+.o(.text.NRF_InitST1) refers to nrf24l01+.o(.text.NRF_WritePage) for NRF_WritePage
    nrf24l01+.o(.text.NRF_InitST1) refers to nrf24l01+.o(.text.NRF_FlushTx) for NRF_FlushTx
    nrf24l01+.o(.text.NRF_InitST1) refers to nrf24l01+.o(.text.NRF_FlushRx) for NRF_FlushRx
    nrf24l01+.o(.ARM.exidx.text.NRF_InitST1) refers to nrf24l01+.o(.text.NRF_InitST1) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_InitST2) refers to spi.o(.text.SPI2_Init) for SPI2_Init
    nrf24l01+.o(.text.NRF_InitST2) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    nrf24l01+.o(.text.NRF_InitST2) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_InitST2) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.text.NRF_InitST2) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.text.NRF_InitST2) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_InitST2) refers to nrf24l01+.o(.data.NRF_Addr_G) for NRF_Addr_G
    nrf24l01+.o(.text.NRF_InitST2) refers to nrf24l01+.o(.text.NRF_WritePage) for NRF_WritePage
    nrf24l01+.o(.text.NRF_InitST2) refers to nrf24l01+.o(.text.NRF_FlushTx) for NRF_FlushTx
    nrf24l01+.o(.text.NRF_InitST2) refers to nrf24l01+.o(.text.NRF_FlushRx) for NRF_FlushRx
    nrf24l01+.o(.ARM.exidx.text.NRF_InitST2) refers to nrf24l01+.o(.text.NRF_InitST2) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_InitTR1) refers to spi.o(.text.SPI2_Init) for SPI2_Init
    nrf24l01+.o(.text.NRF_InitTR1) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    nrf24l01+.o(.text.NRF_InitTR1) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_InitTR1) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.text.NRF_InitTR1) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.text.NRF_InitTR1) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_InitTR1) refers to nrf24l01+.o(.data.NRF_Addr_G) for NRF_Addr_G
    nrf24l01+.o(.text.NRF_InitTR1) refers to nrf24l01+.o(.text.NRF_WritePage) for NRF_WritePage
    nrf24l01+.o(.text.NRF_InitTR1) refers to nrf24l01+.o(.text.NRF_FlushTx) for NRF_FlushTx
    nrf24l01+.o(.text.NRF_InitTR1) refers to nrf24l01+.o(.text.NRF_FlushRx) for NRF_FlushRx
    nrf24l01+.o(.ARM.exidx.text.NRF_InitTR1) refers to nrf24l01+.o(.text.NRF_InitTR1) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_InitTR2) refers to spi.o(.text.SPI2_Init) for SPI2_Init
    nrf24l01+.o(.text.NRF_InitTR2) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    nrf24l01+.o(.text.NRF_InitTR2) refers to nrf24l01+.o(.text.NRF_CSN) for NRF_CSN
    nrf24l01+.o(.text.NRF_InitTR2) refers to nrf24l01+.o(.text.NRF_CE) for NRF_CE
    nrf24l01+.o(.text.NRF_InitTR2) refers to nrf24l01+.o(.text.NRF_WriteByte) for NRF_WriteByte
    nrf24l01+.o(.text.NRF_InitTR2) refers to nrf24l01+.o(.text.NRF_ReadByte) for NRF_ReadByte
    nrf24l01+.o(.text.NRF_InitTR2) refers to nrf24l01+.o(.data.NRF_Addr_G) for NRF_Addr_G
    nrf24l01+.o(.text.NRF_InitTR2) refers to nrf24l01+.o(.text.NRF_WritePage) for NRF_WritePage
    nrf24l01+.o(.text.NRF_InitTR2) refers to nrf24l01+.o(.text.NRF_FlushTx) for NRF_FlushTx
    nrf24l01+.o(.text.NRF_InitTR2) refers to nrf24l01+.o(.text.NRF_FlushRx) for NRF_FlushRx
    nrf24l01+.o(.ARM.exidx.text.NRF_InitTR2) refers to nrf24l01+.o(.text.NRF_InitTR2) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.bss.NRF_State_G) for NRF_State_G
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.text.NRF_StartRxMode) for NRF_StartRxMode
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.text.NRF_CheckRxFlag) for NRF_CheckRxFlag
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.bss.NRF_RxBuff_G) for NRF_RxBuff_G
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.text.NRF_Receive) for NRF_Receive
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.text.NRF_StopRxMode) for NRF_StopRxMode
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.text.NRF_StartTxMode) for NRF_StartTxMode
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.bss.NRF_TxBuff_G) for NRF_TxBuff_G
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.text.NRF_Transmit) for NRF_Transmit
    nrf24l01+.o(.text.NRF_Update) refers to nrf24l01+.o(.text.NRF_CheckTxFlag) for NRF_CheckTxFlag
    nrf24l01+.o(.ARM.exidx.text.NRF_Update) refers to nrf24l01+.o(.text.NRF_Update) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_SetData) refers to nrf24l01+.o(.bss.NRF_TxBuff_G) for NRF_TxBuff_G
    nrf24l01+.o(.ARM.exidx.text.NRF_SetData) refers to nrf24l01+.o(.text.NRF_SetData) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_GetData) refers to nrf24l01+.o(.bss.NRF_RxBuff_G) for NRF_RxBuff_G
    nrf24l01+.o(.ARM.exidx.text.NRF_GetData) refers to nrf24l01+.o(.text.NRF_GetData) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_ClearTxBuff) refers to nrf24l01+.o(.bss.NRF_TxBuff_G) for NRF_TxBuff_G
    nrf24l01+.o(.ARM.exidx.text.NRF_ClearTxBuff) refers to nrf24l01+.o(.text.NRF_ClearTxBuff) for [Anonymous Symbol]
    nrf24l01+.o(.text.NRF_ClearRxBuff) refers to nrf24l01+.o(.bss.NRF_RxBuff_G) for NRF_RxBuff_G
    nrf24l01+.o(.ARM.exidx.text.NRF_ClearRxBuff) refers to nrf24l01+.o(.text.NRF_ClearRxBuff) for [Anonymous Symbol]
    afio.o(.ARM.exidx.text.AFIO_Init) refers to afio.o(.text.AFIO_Init) for [Anonymous Symbol]
    afio.o(.ARM.exidx.text.Disable_JTAG) refers to afio.o(.text.Disable_JTAG) for [Anonymous Symbol]
    tr.o(.text.TR_Update) refers to nrf24l01+.o(.text.NRF_GetData) for NRF_GetData
    tr.o(.text.TR_Update) refers to tim.o(.text.TIM3_GetCounterValue) for TIM3_GetCounterValue
    tr.o(.text.TR_Update) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    tr.o(.text.TR_Update) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    tr.o(.text.TR_Update) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    tr.o(.text.TR_Update) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    tr.o(.text.TR_Update) refers to pid.o(.text.PID_SetError) for PID_SetError
    tr.o(.text.TR_Update) refers to pid.o(.text.PID_Update) for PID_Update
    tr.o(.text.TR_Update) refers to tim.o(.text.TIM2_GetDutyCycle) for TIM2_GetDutyCycle
    tr.o(.text.TR_Update) refers to pid.o(.text.PID_GetCorrection) for PID_GetCorrection
    tr.o(.text.TR_Update) refers to tim.o(.text.TIM2_SetDutyCycle) for TIM2_SetDutyCycle
    tr.o(.text.TR_Update) refers to tim.o(.text.TIM3_SetCounterValue) for TIM3_SetCounterValue
    tr.o(.ARM.exidx.text.TR_Update) refers to tr.o(.text.TR_Update) for [Anonymous Symbol]
    pid.o(.text.PID_Init) refers to pid.o(.bss.PID_G) for PID_G
    pid.o(.ARM.exidx.text.PID_Init) refers to pid.o(.text.PID_Init) for [Anonymous Symbol]
    pid.o(.text.PID_Update) refers to pid.o(.bss.PID_G) for PID_G
    pid.o(.ARM.exidx.text.PID_Update) refers to pid.o(.text.PID_Update) for [Anonymous Symbol]
    pid.o(.text.PID_SetError) refers to pid.o(.bss.PID_G) for PID_G
    pid.o(.ARM.exidx.text.PID_SetError) refers to pid.o(.text.PID_SetError) for [Anonymous Symbol]
    pid.o(.text.PID_GetCorrection) refers to pid.o(.bss.PID_G) for PID_G
    pid.o(.ARM.exidx.text.PID_GetCorrection) refers to pid.o(.text.PID_GetCorrection) for [Anonymous Symbol]
    tim.o(.text.TIM2_Init) refers to afio.o(.text.AFIO_Init) for AFIO_Init
    tim.o(.text.TIM2_Init) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    tim.o(.ARM.exidx.text.TIM2_Init) refers to tim.o(.text.TIM2_Init) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.TIM2_SetDutyCycle) refers to tim.o(.text.TIM2_SetDutyCycle) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.TIM2_GetDutyCycle) refers to tim.o(.text.TIM2_GetDutyCycle) for [Anonymous Symbol]
    tim.o(.text.TIM3_Init) refers to afio.o(.text.AFIO_Init) for AFIO_Init
    tim.o(.text.TIM3_Init) refers to gpio.o(.text.GPIO_InitPin) for GPIO_InitPin
    tim.o(.ARM.exidx.text.TIM3_Init) refers to tim.o(.text.TIM3_Init) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.TIM3_SetCounterValue) refers to tim.o(.text.TIM3_SetCounterValue) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.TIM3_GetCounterValue) refers to tim.o(.text.TIM3_GetCounterValue) for [Anonymous Symbol]
    st.o(.text.ST_Update) refers to ir.o(.text.IR_GetState) for IR_GetState
    st.o(.text.ST_Update) refers to st.o(.bss.IR0_State) for IR0_State
    st.o(.text.ST_Update) refers to st.o(.bss.IR1_State) for IR1_State
    st.o(.text.ST_Update) refers to st.o(.bss.IR2_State) for IR2_State
    st.o(.text.ST_Update) refers to st.o(.data.ST_Empty_G) for ST_Empty_G
    st.o(.text.ST_Update) refers to lcd.o(.text.LCD_ClearBuffer) for LCD_ClearBuffer
    st.o(.text.ST_Update) refers to st.o(.bss.ST_State_G) for ST_State_G
    st.o(.text.ST_Update) refers to st.o(.text.ST_StartState) for ST_StartState
    st.o(.text.ST_Update) refers to st.o(.text.ST_GetTrainAddr) for ST_GetTrainAddr
    st.o(.text.ST_Update) refers to st.o(.text.ST_DetectTrainEnter) for ST_DetectTrainEnter
    st.o(.text.ST_Update) refers to st.o(.text.ST_WaitStationEmpty) for ST_WaitStationEmpty
    st.o(.text.ST_Update) refers to st.o(.text.ST_DetectTrainReach) for ST_DetectTrainReach
    st.o(.text.ST_Update) refers to st.o(.text.ST_ServeTrain) for ST_ServeTrain
    st.o(.ARM.exidx.text.ST_Update) refers to st.o(.text.ST_Update) for [Anonymous Symbol]
    st.o(.text.ST_StartState) refers to st.o(.bss.ST_Buff_G) for ST_Buff_G
    st.o(.text.ST_StartState) refers to st.o(.data.ST_Addr_G) for ST_Addr_G
    st.o(.text.ST_StartState) refers to nrf24l01+.o(.text.NRF_SetData) for NRF_SetData
    st.o(.text.ST_StartState) refers to st.o(.bss.ST_State_G) for ST_State_G
    st.o(.ARM.exidx.text.ST_StartState) refers to st.o(.text.ST_StartState) for [Anonymous Symbol]
    st.o(.text.ST_GetTrainAddr) refers to nrf24l01+.o(.text.NRF_GetData) for NRF_GetData
    st.o(.text.ST_GetTrainAddr) refers to st.o(.data.ST_Addr_G) for ST_Addr_G
    st.o(.text.ST_GetTrainAddr) refers to st.o(.bss.ST_Buff_G) for ST_Buff_G
    st.o(.text.ST_GetTrainAddr) refers to nrf24l01+.o(.text.NRF_SetData) for NRF_SetData
    st.o(.text.ST_GetTrainAddr) refers to nrf24l01+.o(.text.NRF_ClearRxBuff) for NRF_ClearRxBuff
    st.o(.text.ST_GetTrainAddr) refers to st.o(.bss.ST_State_G) for ST_State_G
    st.o(.ARM.exidx.text.ST_GetTrainAddr) refers to st.o(.text.ST_GetTrainAddr) for [Anonymous Symbol]
    st.o(.text.ST_DetectTrainEnter) refers to st.o(.bss.IR0_State) for IR0_State
    st.o(.text.ST_DetectTrainEnter) refers to st.o(.data.ST_Empty_G) for ST_Empty_G
    st.o(.text.ST_DetectTrainEnter) refers to st.o(.data.ST_Addr_G) for ST_Addr_G
    st.o(.text.ST_DetectTrainEnter) refers to st.o(.bss.ST_Buff_G) for ST_Buff_G
    st.o(.text.ST_DetectTrainEnter) refers to st.o(.bss.ST_State_G) for ST_State_G
    st.o(.text.ST_DetectTrainEnter) refers to st.o(.rodata.str1.1) for .L.str
    st.o(.text.ST_DetectTrainEnter) refers to lcd.o(.text.LCD_SetStringBuffer) for LCD_SetStringBuffer
    st.o(.text.ST_DetectTrainEnter) refers to lcd.o(.text.LCD_SetCharacterBuffer) for LCD_SetCharacterBuffer
    st.o(.text.ST_DetectTrainEnter) refers to nrf24l01+.o(.text.NRF_SetData) for NRF_SetData
    st.o(.ARM.exidx.text.ST_DetectTrainEnter) refers to st.o(.text.ST_DetectTrainEnter) for [Anonymous Symbol]
    st.o(.text.ST_WaitStationEmpty) refers to st.o(.data.ST_Empty_G) for ST_Empty_G
    st.o(.text.ST_WaitStationEmpty) refers to st.o(.bss.ST_State_G) for ST_State_G
    st.o(.ARM.exidx.text.ST_WaitStationEmpty) refers to st.o(.text.ST_WaitStationEmpty) for [Anonymous Symbol]
    st.o(.text.ST_DetectTrainReach) refers to st.o(.bss.IR1_State) for IR1_State
    st.o(.text.ST_DetectTrainReach) refers to st.o(.bss.ST_Buff_G) for ST_Buff_G
    st.o(.text.ST_DetectTrainReach) refers to st.o(.data.ST_Addr_G) for ST_Addr_G
    st.o(.text.ST_DetectTrainReach) refers to nrf24l01+.o(.text.NRF_SetData) for NRF_SetData
    st.o(.text.ST_DetectTrainReach) refers to st.o(.bss.ST_Wait_G) for ST_Wait_G
    st.o(.text.ST_DetectTrainReach) refers to st.o(.rodata.str1.1) for .L.str
    st.o(.text.ST_DetectTrainReach) refers to lcd.o(.text.LCD_SetStringBuffer) for LCD_SetStringBuffer
    st.o(.text.ST_DetectTrainReach) refers to lcd.o(.text.LCD_SetCharacterBuffer) for LCD_SetCharacterBuffer
    st.o(.text.ST_DetectTrainReach) refers to st.o(.bss.ST_State_G) for ST_State_G
    st.o(.ARM.exidx.text.ST_DetectTrainReach) refers to st.o(.text.ST_DetectTrainReach) for [Anonymous Symbol]
    st.o(.text.ST_ServeTrain) refers to st.o(.bss.ST_Wait_G) for ST_Wait_G
    st.o(.text.ST_ServeTrain) refers to st.o(.bss.IR2_State) for IR2_State
    st.o(.text.ST_ServeTrain) refers to lcd.o(.text.LCD_ClearBuffer) for LCD_ClearBuffer
    st.o(.text.ST_ServeTrain) refers to lcd.o(.text.LCD_SetStringBuffer) for LCD_SetStringBuffer
    st.o(.text.ST_ServeTrain) refers to st.o(.rodata.str1.1) for .L.str.4
    st.o(.text.ST_ServeTrain) refers to lcd.o(.text.LCD_SetCharacterBuffer) for LCD_SetCharacterBuffer
    st.o(.text.ST_ServeTrain) refers to nrf24l01+.o(.text.NRF_SetData) for NRF_SetData
    st.o(.text.ST_ServeTrain) refers to st.o(.data.ST_Addr_G) for ST_Addr_G
    st.o(.text.ST_ServeTrain) refers to st.o(.bss.ST_Buff_G) for ST_Buff_G
    st.o(.text.ST_ServeTrain) refers to st.o(.bss.ST_State_G) for ST_State_G
    st.o(.ARM.exidx.text.ST_ServeTrain) refers to st.o(.text.ST_ServeTrain) for [Anonymous Symbol]
    sch.o(.text.SCH_Init) refers to sch.o(.text.SCH_Delete_Task) for SCH_Delete_Task
    sch.o(.text.SCH_Init) refers to sch.o(.bss.SCH_ErrorCode_G) for SCH_ErrorCode_G
    sch.o(.text.SCH_Init) refers to sch.o(.bss.SCH_ErrorTickCount_G) for SCH_ErrorTickCount_G
    sch.o(.text.SCH_Init) refers to sch.o(.bss.SCH_IntFlag_G) for SCH_IntFlag_G
    sch.o(.ARM.exidx.text.SCH_Init) refers to sch.o(.text.SCH_Init) for [Anonymous Symbol]
    sch.o(.text.SCH_Delete_Task) refers to sch.o(.bss.SCH_Tasks) for SCH_Tasks
    sch.o(.text.SCH_Delete_Task) refers to sch.o(.bss.SCH_ErrorCode_G) for SCH_ErrorCode_G
    sch.o(.ARM.exidx.text.SCH_Delete_Task) refers to sch.o(.text.SCH_Delete_Task) for [Anonymous Symbol]
    sch.o(.text.SCH_Start) refers to sch_config.o(.text.SysTick_Init) for SysTick_Init
    sch.o(.ARM.exidx.text.SCH_Start) refers to sch.o(.text.SCH_Start) for [Anonymous Symbol]
    sch.o(.text.SCH_Add_Task) refers to sch.o(.bss.SCH_Tasks) for SCH_Tasks
    sch.o(.text.SCH_Add_Task) refers to sch.o(.bss.SCH_ErrorCode_G) for SCH_ErrorCode_G
    sch.o(.ARM.exidx.text.SCH_Add_Task) refers to sch.o(.text.SCH_Add_Task) for [Anonymous Symbol]
    sch.o(.text.SCH_Report_Status) refers to sch.o(.bss.SCH_ErrorTickCount_G) for SCH_ErrorTickCount_G
    sch.o(.text.SCH_Report_Status) refers to sch.o(.bss.SCH_ErrorCode_G) for SCH_ErrorCode_G
    sch.o(.text.SCH_Report_Status) refers to led.o(.text.LED_SetState) for LED_SetState
    sch.o(.text.SCH_Report_Status) refers to sch.o(.bss.SCH_IntFlag_G) for SCH_IntFlag_G
    sch.o(.ARM.exidx.text.SCH_Report_Status) refers to sch.o(.text.SCH_Report_Status) for [Anonymous Symbol]
    sch.o(.ARM.exidx.text.SCH_Go_To_Sleep) refers to sch.o(.text.SCH_Go_To_Sleep) for [Anonymous Symbol]
    sch.o(.text.SCH_Update) refers to sch.o(.bss.SCH_Tasks) for SCH_Tasks
    sch.o(.text.SCH_Update) refers to sch.o(.bss.SCH_IntFlag_G) for SCH_IntFlag_G
    sch.o(.ARM.exidx.text.SCH_Update) refers to sch.o(.text.SCH_Update) for [Anonymous Symbol]
    sch.o(.text.SCH_Dispatch_Tasks) refers to sch.o(.bss.SCH_Tasks) for SCH_Tasks
    sch.o(.text.SCH_Dispatch_Tasks) refers to sch.o(.text.SCH_Delete_Task) for SCH_Delete_Task
    sch.o(.text.SCH_Dispatch_Tasks) refers to sch.o(.text.SCH_Report_Status) for SCH_Report_Status
    sch.o(.ARM.exidx.text.SCH_Dispatch_Tasks) refers to sch.o(.text.SCH_Dispatch_Tasks) for [Anonymous Symbol]
    sch_config.o(.ARM.exidx.text.SysTick_Init) refers to sch_config.o(.text.SysTick_Init) for [Anonymous Symbol]
    sch_config.o(.text.SysTick_Handler) refers to sch.o(.text.SCH_Update) for SCH_Update
    sch_config.o(.ARM.exidx.text.SysTick_Handler) refers to sch_config.o(.text.SysTick_Handler) for [Anonymous Symbol]
    sch_config.o(.ARM.exidx.text.HW_Delay_ms) refers to sch_config.o(.text.HW_Delay_ms) for [Anonymous Symbol]
    sch_config.o(.ARM.exidx.text.HW_Delay_us) refers to sch_config.o(.text.HW_Delay_us) for [Anonymous Symbol]
    sch_config.o(.text.SW_Delay_ms) refers to sch_config.o(.text.SW_Delay_us) for SW_Delay_us
    sch_config.o(.ARM.exidx.text.SW_Delay_ms) refers to sch_config.o(.text.SW_Delay_ms) for [Anonymous Symbol]
    sch_config.o(.ARM.exidx.text.SW_Delay_us) refers to sch_config.o(.text.SW_Delay_us) for [Anonymous Symbol]
    sr.o(.text.SR_Update) refers to sr.o(.bss.SR_State_G) for SR_State_G
    sr.o(.text.SR_Update) refers to sr.o(.bss.SR_Index_G) for SR_Index_G
    sr.o(.text.SR_Update) refers to sr.o(.data.SR_Addr_G) for SR_Addr_G
    sr.o(.text.SR_Update) refers to nrf24l01+.o(.text.NRF_OpenWritingPipe) for NRF_OpenWritingPipe
    sr.o(.text.SR_Update) refers to nrf24l01+.o(.text.NRF_StartTxMode) for NRF_StartTxMode
    sr.o(.text.SR_Update) refers to sr.o(.bss.SR_TxBuff_G) for SR_TxBuff_G
    sr.o(.text.SR_Update) refers to nrf24l01+.o(.text.NRF_Transmit) for NRF_Transmit
    sr.o(.text.SR_Update) refers to nrf24l01+.o(.text.NRF_CheckTxFlag) for NRF_CheckTxFlag
    sr.o(.text.SR_Update) refers to nrf24l01+.o(.text.NRF_StartRxMode) for NRF_StartRxMode
    sr.o(.text.SR_Update) refers to nrf24l01+.o(.text.NRF_CheckRxFlag) for NRF_CheckRxFlag
    sr.o(.text.SR_Update) refers to sr.o(.bss.SR_RxBuff_G) for SR_RxBuff_G
    sr.o(.text.SR_Update) refers to nrf24l01+.o(.text.NRF_Receive) for NRF_Receive
    sr.o(.text.SR_Update) refers to nrf24l01+.o(.text.NRF_StopRxMode) for NRF_StopRxMode
    sr.o(.text.SR_Update) refers to sr.o(.bss.SR_G) for SR_G
    sr.o(.text.SR_Update) refers to led.o(.text.LED_SetState) for LED_SetState
    sr.o(.ARM.exidx.text.SR_Update) refers to sr.o(.text.SR_Update) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to sch_config.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    fdiv.o(x$fpl$frdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$frdiv) refers to fdiv.o(x$fpl$fdiv) for _fdiv1
    fdiv.o(x$fpl$fdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$fdiv) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fdiv.o(x$fpl$fdiv) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffix) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffixr) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fmul.o(x$fpl$fmul) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.SR_Task), (44 bytes).
    Removing main.o(.ARM.exidx.text.SR_Task), (8 bytes).
    Removing main.o(.text.ST1_Task), (100 bytes).
    Removing main.o(.ARM.exidx.text.ST1_Task), (8 bytes).
    Removing main.o(.text.ST2_Task), (100 bytes).
    Removing main.o(.ARM.exidx.text.ST2_Task), (8 bytes).
    Removing main.o(.text.TR1_Task), (72 bytes).
    Removing main.o(.ARM.exidx.text.TR1_Task), (8 bytes).
    Removing main.o(.text.TR2_Task), (72 bytes).
    Removing main.o(.ARM.exidx.text.TR2_Task), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.text.ADC_Init), (192 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing adc.o(.text.ADC_Update), (40 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Update), (8 bytes).
    Removing adc.o(.text.ADC_GetState), (12 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_GetState), (8 bytes).
    Removing adc.o(.bss.ADC_State), (2 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.text.LCD_Init), (170 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Init), (8 bytes).
    Removing lcd.o(.text.LCD_ClearBuffer), (56 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_ClearBuffer), (8 bytes).
    Removing lcd.o(.text.LCD_SendCommand), (66 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SendCommand), (8 bytes).
    Removing lcd.o(.text.LCD_Clear), (24 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing lcd.o(.text.LCD_Update), (78 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Update), (8 bytes).
    Removing lcd.o(.text.LCD_SendCharacter), (66 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SendCharacter), (8 bytes).
    Removing lcd.o(.text.LCD_SendString), (34 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SendString), (8 bytes).
    Removing lcd.o(.text.LCD_SetCursor), (20 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetCursor), (8 bytes).
    Removing lcd.o(.text.LCD_SetCharacterBuffer), (20 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetCharacterBuffer), (8 bytes).
    Removing lcd.o(.text.LCD_SetStringBuffer), (82 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetStringBuffer), (8 bytes).
    Removing lcd.o(.bss.LCD_ReadingRowIndex_G), (1 bytes).
    Removing lcd.o(.bss.LCD_ReadingColumnIndex_G), (1 bytes).
    Removing lcd.o(.bss.LCD_Buff_G), (80 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.GPIO_InitPin), (108 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_InitPin), (8 bytes).
    Removing gpio.o(.text.GPIO_SetPinState), (22 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetPinState), (8 bytes).
    Removing gpio.o(.text.GPIO_GetPinState), (14 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_GetPinState), (8 bytes).
    Removing gpio.o(.text.GPIO_SetPortState), (12 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetPortState), (8 bytes).
    Removing gpio.o(.text.GPIO_GetPortState), (6 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_GetPortState), (8 bytes).
    Removing ir.o(.text), (0 bytes).
    Removing ir.o(.text.IR_Init), (42 bytes).
    Removing ir.o(.ARM.exidx.text.IR_Init), (8 bytes).
    Removing ir.o(.text.IR_Update), (50 bytes).
    Removing ir.o(.ARM.exidx.text.IR_Update), (8 bytes).
    Removing ir.o(.text.IR_GetState), (32 bytes).
    Removing ir.o(.ARM.exidx.text.IR_GetState), (8 bytes).
    Removing ir.o(.bss.IR_State_G), (3 bytes).
    Removing led.o(.text), (0 bytes).
    Removing led.o(.text.LED_Init), (20 bytes).
    Removing led.o(.ARM.exidx.text.LED_Init), (8 bytes).
    Removing led.o(.text.LED_Update), (34 bytes).
    Removing led.o(.ARM.exidx.text.LED_Update), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_SetState), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.text.SPI2_Init), (104 bytes).
    Removing spi.o(.ARM.exidx.text.SPI2_Init), (8 bytes).
    Removing spi.o(.text.SPI2_Transfer), (34 bytes).
    Removing spi.o(.ARM.exidx.text.SPI2_Transfer), (8 bytes).
    Removing nrf24l01+.o(.text), (0 bytes).
    Removing nrf24l01+.o(.text.NRF_CSN), (28 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_CSN), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_CE), (28 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_CE), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_WriteByte), (50 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_WriteByte), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_WritePage), (88 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_WritePage), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_ReadByte), (46 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_ReadByte), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_ReadPage), (86 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_ReadPage), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_FlushTx), (22 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_FlushTx), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_FlushRx), (22 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_FlushRx), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_StartTxMode), (22 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_StartTxMode), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_StartRxMode), (26 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_StartRxMode), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_StopRxMode), (10 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_StopRxMode), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_CheckTxFlag), (88 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_CheckTxFlag), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_CheckRxFlag), (36 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_CheckRxFlag), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_Transmit), (60 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_Transmit), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_Receive), (44 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_Receive), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_ACK), (42 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_ACK), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_SetChannel), (12 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_SetChannel), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_OpenWritingPipe), (26 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_OpenWritingPipe), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_OpenReadingPipe1), (14 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_OpenReadingPipe1), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_OpenReadingPipe2), (12 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_OpenReadingPipe2), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_InitSR), (202 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_InitSR), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_InitST1), (204 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_InitST1), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_InitST2), (206 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_InitST2), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_InitTR1), (206 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_InitTR1), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_InitTR2), (206 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_InitTR2), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_Update), (110 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_Update), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_SetData), (32 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_SetData), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_GetData), (24 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_GetData), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_ClearTxBuff), (28 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_ClearTxBuff), (8 bytes).
    Removing nrf24l01+.o(.text.NRF_ClearRxBuff), (28 bytes).
    Removing nrf24l01+.o(.ARM.exidx.text.NRF_ClearRxBuff), (8 bytes).
    Removing nrf24l01+.o(.data.NRF_Addr_G), (30 bytes).
    Removing nrf24l01+.o(.bss.NRF_State_G), (1 bytes).
    Removing nrf24l01+.o(.bss.NRF_RxBuff_G), (5 bytes).
    Removing nrf24l01+.o(.bss.NRF_TxBuff_G), (5 bytes).
    Removing afio.o(.text), (0 bytes).
    Removing afio.o(.text.AFIO_Init), (18 bytes).
    Removing afio.o(.ARM.exidx.text.AFIO_Init), (8 bytes).
    Removing afio.o(.ARM.exidx.text.Disable_JTAG), (8 bytes).
    Removing tr.o(.text), (0 bytes).
    Removing tr.o(.text.TR_Update), (146 bytes).
    Removing tr.o(.ARM.exidx.text.TR_Update), (8 bytes).
    Removing pid.o(.text), (0 bytes).
    Removing pid.o(.text.PID_Init), (32 bytes).
    Removing pid.o(.ARM.exidx.text.PID_Init), (8 bytes).
    Removing pid.o(.text.PID_Update), (62 bytes).
    Removing pid.o(.ARM.exidx.text.PID_Update), (8 bytes).
    Removing pid.o(.text.PID_SetError), (34 bytes).
    Removing pid.o(.ARM.exidx.text.PID_SetError), (8 bytes).
    Removing pid.o(.text.PID_GetCorrection), (12 bytes).
    Removing pid.o(.ARM.exidx.text.PID_GetCorrection), (8 bytes).
    Removing pid.o(.bss.PID_G), (36 bytes).
    Removing tim.o(.text), (0 bytes).
    Removing tim.o(.text.TIM2_Init), (98 bytes).
    Removing tim.o(.ARM.exidx.text.TIM2_Init), (8 bytes).
    Removing tim.o(.text.TIM2_SetDutyCycle), (10 bytes).
    Removing tim.o(.ARM.exidx.text.TIM2_SetDutyCycle), (8 bytes).
    Removing tim.o(.text.TIM2_GetDutyCycle), (10 bytes).
    Removing tim.o(.ARM.exidx.text.TIM2_GetDutyCycle), (8 bytes).
    Removing tim.o(.text.TIM3_Init), (94 bytes).
    Removing tim.o(.ARM.exidx.text.TIM3_Init), (8 bytes).
    Removing tim.o(.text.TIM3_SetCounterValue), (12 bytes).
    Removing tim.o(.ARM.exidx.text.TIM3_SetCounterValue), (8 bytes).
    Removing tim.o(.text.TIM3_GetCounterValue), (12 bytes).
    Removing tim.o(.ARM.exidx.text.TIM3_GetCounterValue), (8 bytes).
    Removing st.o(.text), (0 bytes).
    Removing st.o(.text.ST_Update), (150 bytes).
    Removing st.o(.ARM.exidx.text.ST_Update), (8 bytes).
    Removing st.o(.text.ST_StartState), (60 bytes).
    Removing st.o(.ARM.exidx.text.ST_StartState), (8 bytes).
    Removing st.o(.text.ST_GetTrainAddr), (84 bytes).
    Removing st.o(.ARM.exidx.text.ST_GetTrainAddr), (8 bytes).
    Removing st.o(.text.ST_DetectTrainEnter), (272 bytes).
    Removing st.o(.ARM.exidx.text.ST_DetectTrainEnter), (8 bytes).
    Removing st.o(.text.ST_WaitStationEmpty), (30 bytes).
    Removing st.o(.ARM.exidx.text.ST_WaitStationEmpty), (8 bytes).
    Removing st.o(.text.ST_DetectTrainReach), (252 bytes).
    Removing st.o(.ARM.exidx.text.ST_DetectTrainReach), (8 bytes).
    Removing st.o(.text.ST_ServeTrain), (472 bytes).
    Removing st.o(.ARM.exidx.text.ST_ServeTrain), (8 bytes).
    Removing st.o(.bss.IR0_State), (1 bytes).
    Removing st.o(.bss.IR1_State), (1 bytes).
    Removing st.o(.bss.IR2_State), (1 bytes).
    Removing st.o(.data.ST_Empty_G), (2 bytes).
    Removing st.o(.bss.ST_State_G), (1 bytes).
    Removing st.o(.bss.ST_Buff_G), (1 bytes).
    Removing st.o(.data.ST_Addr_G), (1 bytes).
    Removing st.o(.rodata.str1.1), (22 bytes).
    Removing st.o(.bss.ST_Wait_G), (2 bytes).
    Removing sch.o(.text), (0 bytes).
    Removing sch.o(.ARM.exidx.text.SCH_Init), (8 bytes).
    Removing sch.o(.ARM.exidx.text.SCH_Delete_Task), (8 bytes).
    Removing sch.o(.ARM.exidx.text.SCH_Start), (8 bytes).
    Removing sch.o(.text.SCH_Add_Task), (86 bytes).
    Removing sch.o(.ARM.exidx.text.SCH_Add_Task), (8 bytes).
    Removing sch.o(.ARM.exidx.text.SCH_Report_Status), (8 bytes).
    Removing sch.o(.text.SCH_Go_To_Sleep), (2 bytes).
    Removing sch.o(.ARM.exidx.text.SCH_Go_To_Sleep), (8 bytes).
    Removing sch.o(.ARM.exidx.text.SCH_Update), (8 bytes).
    Removing sch.o(.ARM.exidx.text.SCH_Dispatch_Tasks), (8 bytes).
    Removing sch_config.o(.text), (0 bytes).
    Removing sch_config.o(.ARM.exidx.text.SysTick_Init), (8 bytes).
    Removing sch_config.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing sch_config.o(.text.HW_Delay_ms), (8 bytes).
    Removing sch_config.o(.ARM.exidx.text.HW_Delay_ms), (8 bytes).
    Removing sch_config.o(.text.HW_Delay_us), (8 bytes).
    Removing sch_config.o(.ARM.exidx.text.HW_Delay_us), (8 bytes).
    Removing sch_config.o(.text.SW_Delay_ms), (38 bytes).
    Removing sch_config.o(.ARM.exidx.text.SW_Delay_ms), (8 bytes).
    Removing sch_config.o(.ARM.exidx.text.SW_Delay_us), (8 bytes).
    Removing sr.o(.text), (0 bytes).
    Removing sr.o(.text.SR_Update), (314 bytes).
    Removing sr.o(.ARM.exidx.text.SR_Update), (8 bytes).
    Removing sr.o(.bss.SR_State_G), (1 bytes).
    Removing sr.o(.bss.SR_Index_G), (1 bytes).
    Removing sr.o(.data.SR_Addr_G), (25 bytes).
    Removing sr.o(.bss.SR_TxBuff_G), (25 bytes).
    Removing sr.o(.bss.SR_RxBuff_G), (25 bytes).
    Removing sr.o(.bss.SR_G), (1 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.text.SystemCoreClockUpdate), (110 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing system_stm32f10x.o(.data.SystemCoreClock), (4 bytes).
    Removing system_stm32f10x.o(.rodata.AHBPrescTable), (16 bytes).

232 unused section(s) (total 7266 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fdiv.s                          0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/ffix.s                          0x00000000   Number         0  ffix.o ABSOLUTE
    ../fplib/fflt.s                          0x00000000   Number         0  fflt_clz.o ABSOLUTE
    ../fplib/fmul.s                          0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ADC.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    AFIO.c                                   0x00000000   Number         0  afio.o ABSOLUTE
    GPIO.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    IR.c                                     0x00000000   Number         0  ir.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    LED.c                                    0x00000000   Number         0  led.o ABSOLUTE
    NRF24L01+.c                              0x00000000   Number         0  nrf24l01+.o ABSOLUTE
    PID.c                                    0x00000000   Number         0  pid.o ABSOLUTE
    RTE/Device/STM32F103C8/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    SCH.c                                    0x00000000   Number         0  sch.o ABSOLUTE
    SCH_CONFIG.c                             0x00000000   Number         0  sch_config.o ABSOLUTE
    SPI.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    SR.c                                     0x00000000   Number         0  sr.o ABSOLUTE
    ST.c                                     0x00000000   Number         0  st.o ABSOLUTE
    TIM.c                                    0x00000000   Number         0  tim.o ABSOLUTE
    TR.c                                     0x00000000   Number         0  tr.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_zi                             0x08000128   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000144   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000146   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000146   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000148   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800014a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800014a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800014a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800014a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800014a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800014a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800014a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800014c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800014c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800014c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x08000152   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x08000152   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000156   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000156   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800015e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000160   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000160   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000164   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x0800016c   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001ac   Section        0  heapauxi.o(.text)
    .text                                    0x080001b2   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080001fc   Section        0  exit.o(.text)
    .text                                    0x08000210   Section        8  libspace.o(.text)
    .text                                    0x08000218   Section        0  sys_exit.o(.text)
    .text                                    0x08000224   Section        2  use_no_semi.o(.text)
    .text                                    0x08000226   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000228   Section        0  afio.o(.text.Disable_JTAG)
    [Anonymous Symbol]                       0x08000238   Section        0  led.o(.text.LED_SetState)
    [Anonymous Symbol]                       0x08000250   Section        0  sch.o(.text.SCH_Delete_Task)
    [Anonymous Symbol]                       0x080002a8   Section        0  sch.o(.text.SCH_Dispatch_Tasks)
    [Anonymous Symbol]                       0x080002ec   Section        0  sch.o(.text.SCH_Init)
    [Anonymous Symbol]                       0x08000320   Section        0  sch.o(.text.SCH_Report_Status)
    [Anonymous Symbol]                       0x08000388   Section        0  sch.o(.text.SCH_Start)
    [Anonymous Symbol]                       0x08000394   Section        0  sch.o(.text.SCH_Update)
    [Anonymous Symbol]                       0x080003dc   Section        0  sch_config.o(.text.SW_Delay_us)
    SetSysClock                              0x0800040d   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x0800040c   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x08000415   Thumb Code   190  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x08000414   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x080004d4   Section        0  sch_config.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080004dc   Section        0  sch_config.o(.text.SysTick_Init)
    [Anonymous Symbol]                       0x0800051c   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000574   Section        0  main.o(.text.main)
    .bss                                     0x20000000   Section       96  libspace.o(.bss)
    LED_G                                    0x20000060   Data           1  led.o(.bss.LED_G)
    [Anonymous Symbol]                       0x20000060   Section        0  led.o(.bss.LED_G)
    SCH_ErrorCode_G                          0x20000061   Data           1  sch.o(.bss.SCH_ErrorCode_G)
    [Anonymous Symbol]                       0x20000061   Section        0  sch.o(.bss.SCH_ErrorCode_G)
    SCH_ErrorTickCount_G                     0x20000062   Data           2  sch.o(.bss.SCH_ErrorTickCount_G)
    [Anonymous Symbol]                       0x20000062   Section        0  sch.o(.bss.SCH_ErrorTickCount_G)
    SCH_IntFlag_G                            0x20000064   Data           1  sch.o(.bss.SCH_IntFlag_G)
    [Anonymous Symbol]                       0x20000064   Section        0  sch.o(.bss.SCH_IntFlag_G)
    SCH_Tasks                                0x20000068   Data          80  sch.o(.bss.SCH_Tasks)
    [Anonymous Symbol]                       0x20000068   Section        0  sch.o(.bss.SCH_Tasks)
    Heap_Mem                                 0x200000b8   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x200000b8   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x200002b8   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x200002b8   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x200006b8   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x08000129   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000145   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000147   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000149   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800014b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800014b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800014b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800014b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800014b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800014b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800014b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800014d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800014d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800014d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x08000153   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x08000153   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000157   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000157   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800015f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000161   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000161   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000165   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800016d   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x08000175   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x08000177   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x08000179   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x0800017b   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x0800017d   Thumb Code     2  startup_stm32f10x_md.o(.text)
    SVC_Handler                              0x0800017f   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x08000181   Thumb Code     2  startup_stm32f10x_md.o(.text)
    PendSV_Handler                           0x08000183   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x08000187   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x08000189   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __use_two_region_memory                  0x080001ad   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080001af   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080001b1   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x080001b3   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x080001fd   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000211   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000211   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000211   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000219   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000225   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000225   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000227   Thumb Code     0  indicate_semi.o(.text)
    Disable_JTAG                             0x08000229   Thumb Code    16  afio.o(.text.Disable_JTAG)
    LED_SetState                             0x08000239   Thumb Code    22  led.o(.text.LED_SetState)
    SCH_Delete_Task                          0x08000251   Thumb Code    88  sch.o(.text.SCH_Delete_Task)
    SCH_Dispatch_Tasks                       0x080002a9   Thumb Code    66  sch.o(.text.SCH_Dispatch_Tasks)
    SCH_Init                                 0x080002ed   Thumb Code    52  sch.o(.text.SCH_Init)
    SCH_Report_Status                        0x08000321   Thumb Code   104  sch.o(.text.SCH_Report_Status)
    SCH_Start                                0x08000389   Thumb Code    10  sch.o(.text.SCH_Start)
    SCH_Update                               0x08000395   Thumb Code    70  sch.o(.text.SCH_Update)
    SW_Delay_us                              0x080003dd   Thumb Code    48  sch_config.o(.text.SW_Delay_us)
    SysTick_Handler                          0x080004d5   Thumb Code     8  sch_config.o(.text.SysTick_Handler)
    SysTick_Init                             0x080004dd   Thumb Code    62  sch_config.o(.text.SysTick_Init)
    SystemInit                               0x0800051d   Thumb Code    86  system_stm32f10x.o(.text.SystemInit)
    main                                     0x08000575   Thumb Code    34  main.o(.text.main)
    Region$$Table$$Base                      0x08000598   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080005a8   Number         0  anon$$obj.o(Region$$Table)
    __libspace_start                         0x20000000   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000060   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0800016d

  Load Region LR_1 (Base: 0x08000000, Size: 0x000005a8, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000005a8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          348    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          377  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO          561    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001c   Code   RO          563    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000144   0x08000144   0x00000002   Code   RO          425    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000146   0x08000146   0x00000000   Code   RO          432    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          434    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          437    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          439    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          441    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          444    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          446    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          448    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          450    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          452    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          454    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          456    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          458    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          460    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          462    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          464    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          468    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          470    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          472    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000000   Code   RO          474    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000146   0x08000146   0x00000002   Code   RO          475    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000148   0x08000148   0x00000002   Code   RO          497    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO          512    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO          514    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO          517    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO          520    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO          522    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO          525    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800014a   0x0800014a   0x00000002   Code   RO          526    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800014c   0x0800014c   0x00000000   Code   RO          395    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800014c   0x0800014c   0x00000000   Code   RO          402    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800014c   0x0800014c   0x00000006   Code   RO          414    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000152   0x08000152   0x00000000   Code   RO          404    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x08000152   0x08000152   0x00000004   Code   RO          405    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000156   0x08000156   0x00000000   Code   RO          407    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000156   0x08000156   0x00000008   Code   RO          408    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800015e   0x0800015e   0x00000002   Code   RO          429    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000160   0x08000160   0x00000000   Code   RO          477    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000160   0x08000160   0x00000004   Code   RO          478    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000164   0x08000164   0x00000006   Code   RO          479    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800016a   0x0800016a   0x00000002   PAD
    0x0800016c   0x0800016c   0x00000040   Code   RO          349  * .text               startup_stm32f10x_md.o
    0x080001ac   0x080001ac   0x00000006   Code   RO          375    .text               c_w.l(heapauxi.o)
    0x080001b2   0x080001b2   0x0000004a   Code   RO          416    .text               c_w.l(sys_stackheap_outer.o)
    0x080001fc   0x080001fc   0x00000012   Code   RO          418    .text               c_w.l(exit.o)
    0x0800020e   0x0800020e   0x00000002   PAD
    0x08000210   0x08000210   0x00000008   Code   RO          426    .text               c_w.l(libspace.o)
    0x08000218   0x08000218   0x0000000c   Code   RO          487    .text               c_w.l(sys_exit.o)
    0x08000224   0x08000224   0x00000002   Code   RO          502    .text               c_w.l(use_no_semi.o)
    0x08000226   0x08000226   0x00000000   Code   RO          504    .text               c_w.l(indicate_semi.o)
    0x08000226   0x08000226   0x00000002   PAD
    0x08000228   0x08000228   0x00000010   Code   RO          202    .text.Disable_JTAG  afio.o
    0x08000238   0x08000238   0x00000016   Code   RO          105    .text.LED_SetState  led.o
    0x0800024e   0x0800024e   0x00000002   PAD
    0x08000250   0x08000250   0x00000058   Code   RO          288    .text.SCH_Delete_Task  sch.o
    0x080002a8   0x080002a8   0x00000042   Code   RO          300    .text.SCH_Dispatch_Tasks  sch.o
    0x080002ea   0x080002ea   0x00000002   PAD
    0x080002ec   0x080002ec   0x00000034   Code   RO          286    .text.SCH_Init      sch.o
    0x08000320   0x08000320   0x00000068   Code   RO          294    .text.SCH_Report_Status  sch.o
    0x08000388   0x08000388   0x0000000a   Code   RO          290    .text.SCH_Start     sch.o
    0x08000392   0x08000392   0x00000002   PAD
    0x08000394   0x08000394   0x00000046   Code   RO          298    .text.SCH_Update    sch.o
    0x080003da   0x080003da   0x00000002   PAD
    0x080003dc   0x080003dc   0x00000030   Code   RO          324    .text.SW_Delay_us   sch_config.o
    0x0800040c   0x0800040c   0x00000008   Code   RO          358    .text.SetSysClock   system_stm32f10x.o
    0x08000414   0x08000414   0x000000be   Code   RO          362    .text.SetSysClockTo72  system_stm32f10x.o
    0x080004d2   0x080004d2   0x00000002   PAD
    0x080004d4   0x080004d4   0x00000008   Code   RO          316    .text.SysTick_Handler  sch_config.o
    0x080004dc   0x080004dc   0x0000003e   Code   RO          314    .text.SysTick_Init  sch_config.o
    0x0800051a   0x0800051a   0x00000002   PAD
    0x0800051c   0x0800051c   0x00000056   Code   RO          356    .text.SystemInit    system_stm32f10x.o
    0x08000572   0x08000572   0x00000002   PAD
    0x08000574   0x08000574   0x00000022   Code   RO            2    .text.main          main.o
    0x08000596   0x08000596   0x00000002   PAD
    0x08000598   0x08000598   0x00000010   Data   RO          560    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x080005a8, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region ER_ZI (Exec base: 0x20000000, Load base: 0x080005a8, Size: 0x000006b8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000        -       0x00000060   Zero   RW          427    .bss                c_w.l(libspace.o)
    0x20000060        -       0x00000001   Zero   RW          107    .bss.LED_G          led.o
    0x20000061        -       0x00000001   Zero   RW          302    .bss.SCH_ErrorCode_G  sch.o
    0x20000062        -       0x00000002   Zero   RW          303    .bss.SCH_ErrorTickCount_G  sch.o
    0x20000064        -       0x00000001   Zero   RW          304    .bss.SCH_IntFlag_G  sch.o
    0x20000065   0x080005a8   0x00000003   PAD
    0x20000068        -       0x00000050   Zero   RW          305    .bss.SCH_Tasks      sch.o
    0x200000b8        -       0x00000200   Zero   RW          347    HEAP                startup_stm32f10x_md.o
    0x200002b8        -       0x00000400   Zero   RW          346    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        16          0          0          0          0       1009   afio.o
        22          0          0          0          1       1493   led.o
        34          0          0          0          0        835   main.o
       390          0          0          0         84       2219   sch.o
       118          0          0          0          0       1408   sch_config.o
        64         26        236          0       1536        840   startup_stm32f10x_md.o
       284          0          0          0          0       2828   system_stm32f10x.o

    ----------------------------------------------------------------------
       944         26        252          0       1624      10632   Object Totals
         0          0         16          0          0          0   (incl. Generated)
        16          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       252         16          0          0         96        584   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       246         16          0          0         96        584   c_w.l

    ----------------------------------------------------------------------
       252         16          0          0         96        584   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      1196         42        252          0       1720      10960   Grand Totals
      1196         42        252          0       1720      10960   ELF Image Totals
      1196         42        252          0          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 1448 (   1.41kB)
    Total RW  Size (RW Data + ZI Data)              1720 (   1.68kB)
    Total ROM Size (Code + RO Data + RW Data)       1448 (   1.41kB)

==============================================================================

